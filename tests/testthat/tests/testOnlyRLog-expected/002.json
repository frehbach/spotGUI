{
  "output": {
    "rLog": " \n## -----------------------------------------------\n## -----------------------------------------------\n## Data Reset\n## -----------------------------------------------\n## -----------------------------------------------\n \nlibrary(SPOT)\nlibrary(spotGUI)\n\nspotData <- NULL\n\n#SPOT Call\nspotData <- spot(\n\t\tfun = funSphere, lower = c(-5, -5), upper = c(5, 5),\n\t\tcontrol = list(model = buildKriging, \n\t\t\tmodelControl = list(thetaLower = 1e-04, \n\t\t\tthetaUpper = 100, \n\t\t\talgTheta = optimLBFGSB, \n\t\t\tbudgetAlgTheta = 200, \n\t\t\toptimizeP = FALSE, \n\t\t\tuseLambda = TRUE, \n\t\t\tlambdaLower = -6, \n\t\t\tlambdaUpper = 0, \n\t\t\tstartTheta = NULL, \n\t\t\treinterpolate = TRUE, \n\t\t\ttypes = c(\"numeric\", \"numeric\")), \n\t\t\toptimizer = optimLHD, \n\t\t\toptimizerControl = list(funEvals = 100, \n\t\t\tretries = 100, \n\t\t\ttypes = c(\"numeric\", \"numeric\")), \n\t\t\tdesign = designLHD, \n\t\t\tdesignControl = list(size = 10, \n\t\t\tretries = 1, \n\t\t\tinequalityConstraint = NULL, \n\t\t\treplicates = 1, \n\t\t\ttypes = c(\"numeric\", \"numeric\")), \n\t\t\tfunEvals = 20, \n\t\t\tnoise = FALSE, \n\t\t\tOCBA = FALSE, \n\t\t\tOCBAbudget = 3, \n\t\t\treplicates = 1, \n\t\t\tseedFun = NA, \n\t\t\tseedSPOT = 1, \n\t\t\tplots = FALSE, \n\t\t\ttypes = c(\"numeric\", \"numeric\")))\n\n#Generating DOE\nspotData$x <- designLHD(x = spotData$x, lower = c(-5, -5), upper = c(5, 5),\n\t\t\tcontrol = list(size = 10, \n\t\t\tretries = 1, \n\t\t\treplicates = 1, \n\t\t\ttypes = c(\"numeric\", \"numeric\")))\n\n#Evaluating Candidate Solutions\nspotData$y <- evaluateMissingCandidateSolutions(currX = spotData$x, currY = spotData$y, fun = funSphere)\nspotData$modelFit <- buildKriging(as.matrix(spotData$x),as.matrix(spotData$y))\n\n#SPOT Call\nspotData <- spotLoop(x = spotData$x, y = spotData$y, \n\t\tfun = funSphere, lower = c(-5, -5), upper = c(5, 5),\n\t\tcontrol = list(model = buildKriging, \n\t\t\tmodelControl = list(thetaLower = 1e-04, \n\t\t\tthetaUpper = 100, \n\t\t\talgTheta = optimLBFGSB, \n\t\t\tbudgetAlgTheta = 200, \n\t\t\toptimizeP = FALSE, \n\t\t\tuseLambda = TRUE, \n\t\t\tlambdaLower = -6, \n\t\t\tlambdaUpper = 0, \n\t\t\tstartTheta = NULL, \n\t\t\treinterpolate = TRUE, \n\t\t\ttypes = c(\"numeric\", \"numeric\")), \n\t\t\toptimizer = optimLHD, \n\t\t\toptimizerControl = list(funEvals = 100, \n\t\t\tretries = 100, \n\t\t\ttypes = c(\"numeric\", \"numeric\")), \n\t\t\tdesign = designLHD, \n\t\t\tdesignControl = list(size = 10, \n\t\t\tretries = 1, \n\t\t\tinequalityConstraint = NULL, \n\t\t\treplicates = 1, \n\t\t\ttypes = c(\"numeric\", \"numeric\")), \n\t\t\tfunEvals = 20, \n\t\t\tnoise = FALSE, \n\t\t\tOCBA = FALSE, \n\t\t\tOCBAbudget = 3, \n\t\t\treplicates = 1, \n\t\t\tseedFun = NA, \n\t\t\tseedSPOT = 1, \n\t\t\tplots = FALSE, \n\t\t\ttypes = c(\"numeric\", \"numeric\")))\n\n#Generating Single Next Point on Surrogate Model\nevaluateModelFun <- evaluateModel(spotData$modelFit)\nspotData$x <- rbind(spotData$x,optimLHD(fun = evaluateModelFun, lower = c(-5, -5)\n, upper = c(5, 5), control = list(funEvals = 100, \n\t\t\tretries = 100, \n\t\t\ttypes = c(\"numeric\", \"numeric\")))$xbest)\n\n#Evaluating Candidate Solutions\nspotData$y <- evaluateMissingCandidateSolutions(currX = spotData$x, currY = spotData$y, fun = funSphere)\nspotData$modelFit <- buildKriging(as.matrix(spotData$x),as.matrix(spotData$y))\n"
  }
}
